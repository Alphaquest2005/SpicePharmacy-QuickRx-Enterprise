//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RMSEntities", "TransactionTransactionEntry", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.TransactionBase), "TransactionEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.TransactionEntryBase), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "CustomerTransaction", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RMSDataAccessLayer.Person), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.TransactionBase), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "CustomerPass", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.Person), "Pass", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.Pass), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "PassTicket", "Pass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RMSDataAccessLayer.Pass), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.Ticket), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "CashierTransactionBase", "Cashier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.Cashier), "TransactionBase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.TransactionBase), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "BatchTransactionBase", "Batch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.Batch), "TransactionBase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.TransactionBase), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "StoreStation", "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.Store), "Station", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.Station), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "StationTransactionBase", "Station", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.Station), "TransactionBase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.TransactionBase), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "TransactionBaseTenderEntryEx", "TransactionBase", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.TransactionBase), "TenderEntryEx", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.TenderEntryEx), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "DoctorPrescription", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RMSDataAccessLayer.Doctor), "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.Prescription), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "TicketSetupTicketItem", "TicketSetup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.TicketSetup), "TicketItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.TicketItem), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "ItemTransactionEntryBase", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.Item), "TransactionEntryBase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.TransactionEntryBase), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "PatientPrescription", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RMSDataAccessLayer.Patient), "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.Prescription), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "CompanyStore", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.Company), "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.Store), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "StationBatch", "Station", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.Station), "Batch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.Batch), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "CashierCashierLog", "Cashier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.Cashier), "CashierLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.CashierLog), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "BatchCashier", "Batch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.Batch), "Cashier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RMSDataAccessLayer.Cashier), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "BatchCashier1", "Batch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.Batch), "Cashier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RMSDataAccessLayer.Cashier), true)]
[assembly: EdmRelationshipAttribute("RMSEntities", "BatchTransactionBase1", "Batch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RMSDataAccessLayer.Batch), "TransactionBase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RMSDataAccessLayer.TransactionBase), true)]

#endregion

namespace RMSDataAccessLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RMSModel : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RMSModel object using the connection string found in the 'RMSModel' section of the application configuration file.
        /// </summary>
        public RMSModel() : base("name=RMSModel", "RMSModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RMSModel object.
        /// </summary>
        public RMSModel(string connectionString) : base(connectionString, "RMSModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RMSModel object.
        /// </summary>
        public RMSModel(EntityConnection connection) : base(connection, "RMSModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Item
        {
            get
            {
                if ((_Item == null))
                {
                    _Item = base.CreateObjectSet<Item>("Item");
                }
                return _Item;
            }
        }
        private ObjectSet<Item> _Item;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionBase> TransactionBase
        {
            get
            {
                if ((_TransactionBase == null))
                {
                    _TransactionBase = base.CreateObjectSet<TransactionBase>("TransactionBase");
                }
                return _TransactionBase;
            }
        }
        private ObjectSet<TransactionBase> _TransactionBase;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionEntryBase> TransactionEntryBase
        {
            get
            {
                if ((_TransactionEntryBase == null))
                {
                    _TransactionEntryBase = base.CreateObjectSet<TransactionEntryBase>("TransactionEntryBase");
                }
                return _TransactionEntryBase;
            }
        }
        private ObjectSet<TransactionEntryBase> _TransactionEntryBase;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Company
        {
            get
            {
                if ((_Company == null))
                {
                    _Company = base.CreateObjectSet<Company>("Company");
                }
                return _Company;
            }
        }
        private ObjectSet<Company> _Company;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> Persons
        {
            get
            {
                if ((_Persons == null))
                {
                    _Persons = base.CreateObjectSet<Person>("Persons");
                }
                return _Persons;
            }
        }
        private ObjectSet<Person> _Persons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pass> Pass
        {
            get
            {
                if ((_Pass == null))
                {
                    _Pass = base.CreateObjectSet<Pass>("Pass");
                }
                return _Pass;
            }
        }
        private ObjectSet<Pass> _Pass;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Batch> Batches
        {
            get
            {
                if ((_Batches == null))
                {
                    _Batches = base.CreateObjectSet<Batch>("Batches");
                }
                return _Batches;
            }
        }
        private ObjectSet<Batch> _Batches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Station> Stations
        {
            get
            {
                if ((_Stations == null))
                {
                    _Stations = base.CreateObjectSet<Station>("Stations");
                }
                return _Stations;
            }
        }
        private ObjectSet<Station> _Stations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Store> Stores
        {
            get
            {
                if ((_Stores == null))
                {
                    _Stores = base.CreateObjectSet<Store>("Stores");
                }
                return _Stores;
            }
        }
        private ObjectSet<Store> _Stores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TenderEntryEx> TenderEntryEx
        {
            get
            {
                if ((_TenderEntryEx == null))
                {
                    _TenderEntryEx = base.CreateObjectSet<TenderEntryEx>("TenderEntryEx");
                }
                return _TenderEntryEx;
            }
        }
        private ObjectSet<TenderEntryEx> _TenderEntryEx;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TicketSetup> TicketSetup
        {
            get
            {
                if ((_TicketSetup == null))
                {
                    _TicketSetup = base.CreateObjectSet<TicketSetup>("TicketSetup");
                }
                return _TicketSetup;
            }
        }
        private ObjectSet<TicketSetup> _TicketSetup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CashierLog> CashierLogs
        {
            get
            {
                if ((_CashierLogs == null))
                {
                    _CashierLogs = base.CreateObjectSet<CashierLog>("CashierLogs");
                }
                return _CashierLogs;
            }
        }
        private ObjectSet<CashierLog> _CashierLogs;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Item EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItem(Item item)
        {
            base.AddObject("Item", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionBase EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionBase(TransactionBase transactionBase)
        {
            base.AddObject("TransactionBase", transactionBase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionEntryBase EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionEntryBase(TransactionEntryBase transactionEntryBase)
        {
            base.AddObject("TransactionEntryBase", transactionEntryBase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Company EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompany(Company company)
        {
            base.AddObject("Company", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Persons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersons(Person person)
        {
            base.AddObject("Persons", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pass EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPass(Pass pass)
        {
            base.AddObject("Pass", pass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Batches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBatches(Batch batch)
        {
            base.AddObject("Batches", batch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStations(Station station)
        {
            base.AddObject("Stations", station);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStores(Store store)
        {
            base.AddObject("Stores", store);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TenderEntryEx EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTenderEntryEx(TenderEntryEx tenderEntryEx)
        {
            base.AddObject("TenderEntryEx", tenderEntryEx);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TicketSetup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTicketSetup(TicketSetup ticketSetup)
        {
            base.AddObject("TicketSetup", ticketSetup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CashierLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCashierLogs(CashierLog cashierLog)
        {
            base.AddObject("CashierLogs", cashierLog);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Batch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Batch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Batch object.
        /// </summary>
        /// <param name="batchId">Initial value of the BatchId property.</param>
        /// <param name="openingCash">Initial value of the OpeningCash property.</param>
        /// <param name="openingTime">Initial value of the OpeningTime property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="stationId">Initial value of the StationId property.</param>
        /// <param name="openingCashier">Initial value of the OpeningCashier property.</param>
        /// <param name="sales">Initial value of the Sales property.</param>
        /// <param name="openTransactions">Initial value of the OpenTransactions property.</param>
        /// <param name="closeTransactions">Initial value of the CloseTransactions property.</param>
        public static Batch CreateBatch(global::System.Int32 batchId, global::System.Double openingCash, global::System.DateTime openingTime, global::System.String status, global::System.Int32 stationId, global::System.Int32 openingCashier, global::System.Double sales, global::System.Int32 openTransactions, global::System.Int32 closeTransactions)
        {
            Batch batch = new Batch();
            batch.BatchId = batchId;
            batch.OpeningCash = openingCash;
            batch.OpeningTime = openingTime;
            batch.Status = status;
            batch.StationId = stationId;
            batch.OpeningCashier = openingCashier;
            batch.Sales = sales;
            batch.OpenTransactions = openTransactions;
            batch.CloseTransactions = closeTransactions;
            return batch;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchId
        {
            get
            {
                return _BatchId;
            }
            set
            {
                if (_BatchId != value)
                {
                    OnBatchIdChanging(value);
                    ReportPropertyChanging("BatchId");
                    _BatchId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BatchId");
                    OnBatchIdChanged();
                }
            }
        }
        private global::System.Int32 _BatchId;
        partial void OnBatchIdChanging(global::System.Int32 value);
        partial void OnBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OpeningCash
        {
            get
            {
                return _OpeningCash;
            }
            set
            {
                OnOpeningCashChanging(value);
                ReportPropertyChanging("OpeningCash");
                _OpeningCash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpeningCash");
                OnOpeningCashChanged();
            }
        }
        private global::System.Double _OpeningCash;
        partial void OnOpeningCashChanging(global::System.Double value);
        partial void OnOpeningCashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> EndingCash
        {
            get
            {
                return _EndingCash;
            }
            set
            {
                OnEndingCashChanging(value);
                ReportPropertyChanging("EndingCash");
                _EndingCash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndingCash");
                OnEndingCashChanged();
            }
        }
        private Nullable<global::System.Double> _EndingCash;
        partial void OnEndingCashChanging(Nullable<global::System.Double> value);
        partial void OnEndingCashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OpeningTime
        {
            get
            {
                return _OpeningTime;
            }
            set
            {
                OnOpeningTimeChanging(value);
                ReportPropertyChanging("OpeningTime");
                _OpeningTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpeningTime");
                OnOpeningTimeChanged();
            }
        }
        private global::System.DateTime _OpeningTime;
        partial void OnOpeningTimeChanging(global::System.DateTime value);
        partial void OnOpeningTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ClosingTime
        {
            get
            {
                return _ClosingTime;
            }
            set
            {
                OnClosingTimeChanging(value);
                ReportPropertyChanging("ClosingTime");
                _ClosingTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClosingTime");
                OnClosingTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ClosingTime;
        partial void OnClosingTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnClosingTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TotalTender
        {
            get
            {
                return _TotalTender;
            }
            set
            {
                OnTotalTenderChanging(value);
                ReportPropertyChanging("TotalTender");
                _TotalTender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalTender");
                OnTotalTenderChanged();
            }
        }
        private Nullable<global::System.Double> _TotalTender;
        partial void OnTotalTenderChanging(Nullable<global::System.Double> value);
        partial void OnTotalTenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TotalChange
        {
            get
            {
                return _TotalChange;
            }
            set
            {
                OnTotalChangeChanging(value);
                ReportPropertyChanging("TotalChange");
                _TotalChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalChange");
                OnTotalChangeChanged();
            }
        }
        private Nullable<global::System.Double> _TotalChange;
        partial void OnTotalChangeChanging(Nullable<global::System.Double> value);
        partial void OnTotalChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StationId
        {
            get
            {
                return _StationId;
            }
            set
            {
                OnStationIdChanging(value);
                ReportPropertyChanging("StationId");
                _StationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StationId");
                OnStationIdChanged();
            }
        }
        private global::System.Int32 _StationId;
        partial void OnStationIdChanging(global::System.Int32 value);
        partial void OnStationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OpeningCashier
        {
            get
            {
                return _OpeningCashier;
            }
            set
            {
                OnOpeningCashierChanging(value);
                ReportPropertyChanging("OpeningCashier");
                _OpeningCashier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpeningCashier");
                OnOpeningCashierChanged();
            }
        }
        private global::System.Int32 _OpeningCashier;
        partial void OnOpeningCashierChanging(global::System.Int32 value);
        partial void OnOpeningCashierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClosingCashier
        {
            get
            {
                return _ClosingCashier;
            }
            set
            {
                OnClosingCashierChanging(value);
                ReportPropertyChanging("ClosingCashier");
                _ClosingCashier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClosingCashier");
                OnClosingCashierChanged();
            }
        }
        private Nullable<global::System.Int32> _ClosingCashier;
        partial void OnClosingCashierChanging(Nullable<global::System.Int32> value);
        partial void OnClosingCashierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Sales
        {
            get
            {
                return _Sales;
            }
            set
            {
                OnSalesChanging(value);
                ReportPropertyChanging("Sales");
                _Sales = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sales");
                OnSalesChanged();
            }
        }
        private global::System.Double _Sales;
        partial void OnSalesChanging(global::System.Double value);
        partial void OnSalesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OpenTransactions
        {
            get
            {
                return _OpenTransactions;
            }
            set
            {
                OnOpenTransactionsChanging(value);
                ReportPropertyChanging("OpenTransactions");
                _OpenTransactions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpenTransactions");
                OnOpenTransactionsChanged();
            }
        }
        private global::System.Int32 _OpenTransactions;
        partial void OnOpenTransactionsChanging(global::System.Int32 value);
        partial void OnOpenTransactionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CloseTransactions
        {
            get
            {
                return _CloseTransactions;
            }
            set
            {
                OnCloseTransactionsChanging(value);
                ReportPropertyChanging("CloseTransactions");
                _CloseTransactions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseTransactions");
                OnCloseTransactionsChanged();
            }
        }
        private global::System.Int32 _CloseTransactions;
        partial void OnCloseTransactionsChanging(global::System.Int32 value);
        partial void OnCloseTransactionsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "BatchTransactionBase", "TransactionBase")]
        public EntityCollection<TransactionBase> TransactionBase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionBase>("RMSEntities.BatchTransactionBase", "TransactionBase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionBase>("RMSEntities.BatchTransactionBase", "TransactionBase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "StationBatch", "Station")]
        public Station Station
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Station>("RMSEntities.StationBatch", "Station").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Station>("RMSEntities.StationBatch", "Station").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Station> StationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Station>("RMSEntities.StationBatch", "Station");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Station>("RMSEntities.StationBatch", "Station", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "BatchCashier", "Cashier")]
        public Cashier OpenCashier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cashier>("RMSEntities.BatchCashier", "Cashier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cashier>("RMSEntities.BatchCashier", "Cashier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cashier> OpenCashierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cashier>("RMSEntities.BatchCashier", "Cashier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cashier>("RMSEntities.BatchCashier", "Cashier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "BatchCashier1", "Cashier")]
        public Cashier CloseCashier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cashier>("RMSEntities.BatchCashier1", "Cashier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cashier>("RMSEntities.BatchCashier1", "Cashier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cashier> CloseCashierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cashier>("RMSEntities.BatchCashier1", "Cashier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cashier>("RMSEntities.BatchCashier1", "Cashier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "BatchTransactionBase1", "TransactionBase")]
        public EntityCollection<TransactionBase> CloseTransactionBase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionBase>("RMSEntities.BatchTransactionBase1", "TransactionBase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionBase>("RMSEntities.BatchTransactionBase1", "TransactionBase", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Cashier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cashier : Person
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cashier object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static Cashier CreateCashier(global::System.Int32 id, global::System.String firstName, global::System.String lastName)
        {
            Cashier cashier = new Cashier();
            cashier.Id = id;
            cashier.FirstName = firstName;
            cashier.LastName = lastName;
            return cashier;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SPassword
        {
            get
            {
                return _SPassword;
            }
            set
            {
                OnSPasswordChanging(value);
                ReportPropertyChanging("SPassword");
                _SPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SPassword");
                OnSPasswordChanged();
            }
        }
        private global::System.String _SPassword;
        partial void OnSPasswordChanging(global::System.String value);
        partial void OnSPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginName
        {
            get
            {
                return _LoginName;
            }
            set
            {
                OnLoginNameChanging(value);
                ReportPropertyChanging("LoginName");
                _LoginName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoginName");
                OnLoginNameChanged();
            }
        }
        private global::System.String _LoginName;
        partial void OnLoginNameChanging(global::System.String value);
        partial void OnLoginNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "CashierTransactionBase", "TransactionBase")]
        public EntityCollection<TransactionBase> TransactionBase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionBase>("RMSEntities.CashierTransactionBase", "TransactionBase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionBase>("RMSEntities.CashierTransactionBase", "TransactionBase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "CashierCashierLog", "CashierLog")]
        public EntityCollection<CashierLog> CashierLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CashierLog>("RMSEntities.CashierCashierLog", "CashierLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CashierLog>("RMSEntities.CashierCashierLog", "CashierLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "BatchCashier", "Batch")]
        public EntityCollection<Batch> Batch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Batch>("RMSEntities.BatchCashier", "Batch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Batch>("RMSEntities.BatchCashier", "Batch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "BatchCashier1", "Batch")]
        public EntityCollection<Batch> Batch1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Batch>("RMSEntities.BatchCashier1", "Batch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Batch>("RMSEntities.BatchCashier1", "Batch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="CashierLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CashierLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CashierLog object.
        /// </summary>
        /// <param name="cashierLogId">Initial value of the CashierLogId property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        /// <param name="loginTime">Initial value of the LoginTime property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        public static CashierLog CreateCashierLog(global::System.Int32 cashierLogId, global::System.String machineName, global::System.DateTime loginTime, global::System.String status, global::System.Int32 personId)
        {
            CashierLog cashierLog = new CashierLog();
            cashierLog.CashierLogId = cashierLogId;
            cashierLog.MachineName = machineName;
            cashierLog.LoginTime = loginTime;
            cashierLog.Status = status;
            cashierLog.PersonId = personId;
            return cashierLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CashierLogId
        {
            get
            {
                return _CashierLogId;
            }
            set
            {
                if (_CashierLogId != value)
                {
                    OnCashierLogIdChanging(value);
                    ReportPropertyChanging("CashierLogId");
                    _CashierLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CashierLogId");
                    OnCashierLogIdChanged();
                }
            }
        }
        private global::System.Int32 _CashierLogId;
        partial void OnCashierLogIdChanging(global::System.Int32 value);
        partial void OnCashierLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LoginTime
        {
            get
            {
                return _LoginTime;
            }
            set
            {
                OnLoginTimeChanging(value);
                ReportPropertyChanging("LoginTime");
                _LoginTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginTime");
                OnLoginTimeChanged();
            }
        }
        private global::System.DateTime _LoginTime;
        partial void OnLoginTimeChanging(global::System.DateTime value);
        partial void OnLoginTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogoutTime
        {
            get
            {
                return _LogoutTime;
            }
            set
            {
                OnLogoutTimeChanging(value);
                ReportPropertyChanging("LogoutTime");
                _LogoutTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogoutTime");
                OnLogoutTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogoutTime;
        partial void OnLogoutTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLogoutTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "CashierCashierLog", "Cashier")]
        public Cashier Cashier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cashier>("RMSEntities.CashierCashierLog", "Cashier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cashier>("RMSEntities.CashierCashierLog", "Cashier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cashier> CashierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cashier>("RMSEntities.CashierCashierLog", "Cashier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cashier>("RMSEntities.CashierCashierLog", "Cashier", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="softwareName">Initial value of the SoftwareName property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="motto">Initial value of the Motto property.</param>
        public static Company CreateCompany(global::System.Int32 companyId, global::System.String companyName, global::System.String address, global::System.String softwareName, global::System.String phoneNumber, global::System.String motto)
        {
            Company company = new Company();
            company.CompanyId = companyId;
            company.CompanyName = companyName;
            company.Address = address;
            company.SoftwareName = softwareName;
            company.PhoneNumber = phoneNumber;
            company.Motto = motto;
            return company;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SoftwareName
        {
            get
            {
                return _SoftwareName;
            }
            set
            {
                OnSoftwareNameChanging(value);
                ReportPropertyChanging("SoftwareName");
                _SoftwareName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SoftwareName");
                OnSoftwareNameChanged();
            }
        }
        private global::System.String _SoftwareName;
        partial void OnSoftwareNameChanging(global::System.String value);
        partial void OnSoftwareNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Motto
        {
            get
            {
                return _Motto;
            }
            set
            {
                OnMottoChanging(value);
                ReportPropertyChanging("Motto");
                _Motto = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Motto");
                OnMottoChanged();
            }
        }
        private global::System.String _Motto;
        partial void OnMottoChanging(global::System.String value);
        partial void OnMottoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "CompanyStore", "Store")]
        public EntityCollection<Store> Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Store>("RMSEntities.CompanyStore", "Store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Store>("RMSEntities.CompanyStore", "Store", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Customers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customers : Person
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customers object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static Customers CreateCustomers(global::System.Int32 id, global::System.String firstName, global::System.String lastName)
        {
            Customers customers = new Customers();
            customers.Id = id;
            customers.FirstName = firstName;
            customers.LastName = lastName;
            return customers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerType
        {
            get
            {
                return _CustomerType;
            }
            set
            {
                OnCustomerTypeChanging(value);
                ReportPropertyChanging("CustomerType");
                _CustomerType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerType");
                OnCustomerTypeChanged();
            }
        }
        private global::System.String _CustomerType;
        partial void OnCustomerTypeChanging(global::System.String value);
        partial void OnCustomerTypeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor : Person
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Doctor CreateDoctor(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.String code)
        {
            Doctor doctor = new Doctor();
            doctor.Id = id;
            doctor.FirstName = firstName;
            doctor.LastName = lastName;
            doctor.Code = code;
            return doctor;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "DoctorPrescription", "Prescription")]
        public EntityCollection<Prescription> Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prescription>("RMSEntities.DoctorPrescription", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prescription>("RMSEntities.DoctorPrescription", "Prescription", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(TicketItem))]
    [KnownTypeAttribute(typeof(Medicine))]
    [KnownTypeAttribute(typeof(StockItem))]
    public abstract partial class Item : EntityObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ItemNotDiscountable
        {
            get
            {
                return _ItemNotDiscountable;
            }
            set
            {
                OnItemNotDiscountableChanging(value);
                ReportPropertyChanging("ItemNotDiscountable");
                _ItemNotDiscountable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemNotDiscountable");
                OnItemNotDiscountableChanged();
            }
        }
        private global::System.Boolean _ItemNotDiscountable;
        partial void OnItemNotDiscountableChanging(global::System.Boolean value);
        partial void OnItemNotDiscountableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemLookupCode
        {
            get
            {
                return _ItemLookupCode;
            }
            set
            {
                OnItemLookupCodeChanging(value);
                ReportPropertyChanging("ItemLookupCode");
                _ItemLookupCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemLookupCode");
                OnItemLookupCodeChanged();
            }
        }
        private global::System.String _ItemLookupCode;
        partial void OnItemLookupCodeChanging(global::System.String value);
        partial void OnItemLookupCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department
        {
            get
            {
                return _Department;
            }
            set
            {
                OnDepartmentChanging(value);
                ReportPropertyChanging("Department");
                _Department = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department");
                OnDepartmentChanged();
            }
        }
        private global::System.String _Department;
        partial void OnDepartmentChanging(global::System.String value);
        partial void OnDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExtendedDescription
        {
            get
            {
                return _ExtendedDescription;
            }
            set
            {
                OnExtendedDescriptionChanging(value);
                ReportPropertyChanging("ExtendedDescription");
                _ExtendedDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExtendedDescription");
                OnExtendedDescriptionChanged();
            }
        }
        private global::System.String _ExtendedDescription;
        partial void OnExtendedDescriptionChanging(global::System.String value);
        partial void OnExtendedDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SalesTax
        {
            get
            {
                return _SalesTax;
            }
            set
            {
                OnSalesTaxChanging(value);
                ReportPropertyChanging("SalesTax");
                _SalesTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesTax");
                OnSalesTaxChanged();
            }
        }
        private global::System.Decimal _SalesTax = 0m;
        partial void OnSalesTaxChanging(global::System.Decimal value);
        partial void OnSalesTaxChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "ItemTransactionEntryBase", "TransactionEntryBase")]
        public EntityCollection<TransactionEntryBase> TransactionEntryBase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionEntryBase>("RMSEntities.ItemTransactionEntryBase", "TransactionEntryBase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionEntryBase>("RMSEntities.ItemTransactionEntryBase", "TransactionEntryBase", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Medicine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medicine : Item
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medicine object.
        /// </summary>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="itemNotDiscountable">Initial value of the ItemNotDiscountable property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="itemLookupCode">Initial value of the ItemLookupCode property.</param>
        /// <param name="department">Initial value of the Department property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="extendedDescription">Initial value of the ExtendedDescription property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="suggestedDosage">Initial value of the SuggestedDosage property.</param>
        public static Medicine CreateMedicine(global::System.String description, global::System.Boolean itemNotDiscountable, global::System.Int32 itemId, global::System.String itemLookupCode, global::System.String department, global::System.String category, global::System.Decimal price, global::System.Decimal cost, global::System.Double quantity, global::System.String extendedDescription, global::System.Boolean inactive, global::System.DateTime dateCreated, global::System.String suggestedDosage)
        {
            Medicine medicine = new Medicine();
            medicine.Description = description;
            medicine.ItemNotDiscountable = itemNotDiscountable;
            medicine.ItemId = itemId;
            medicine.ItemLookupCode = itemLookupCode;
            medicine.Department = department;
            medicine.Category = category;
            medicine.Price = price;
            medicine.Cost = cost;
            medicine.Quantity = quantity;
            medicine.ExtendedDescription = extendedDescription;
            medicine.Inactive = inactive;
            medicine.DateCreated = dateCreated;
            medicine.SuggestedDosage = suggestedDosage;
            return medicine;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SuggestedDosage
        {
            get
            {
                return _SuggestedDosage;
            }
            set
            {
                OnSuggestedDosageChanging(value);
                ReportPropertyChanging("SuggestedDosage");
                _SuggestedDosage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SuggestedDosage");
                OnSuggestedDosageChanged();
            }
        }
        private global::System.String _SuggestedDosage;
        partial void OnSuggestedDosageChanging(global::System.String value);
        partial void OnSuggestedDosageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Pass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pass object.
        /// </summary>
        /// <param name="passId">Initial value of the PassId property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="customerId">Initial value of the CustomerId property.</param>
        /// <param name="passNumber">Initial value of the PassNumber property.</param>
        public static Pass CreatePass(global::System.Int32 passId, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Int32 customerId, global::System.String passNumber)
        {
            Pass pass = new Pass();
            pass.PassId = passId;
            pass.StartDate = startDate;
            pass.EndDate = endDate;
            pass.CustomerId = customerId;
            pass.PassNumber = passNumber;
            return pass;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PassId
        {
            get
            {
                return _PassId;
            }
            set
            {
                if (_PassId != value)
                {
                    OnPassIdChanging(value);
                    ReportPropertyChanging("PassId");
                    _PassId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PassId");
                    OnPassIdChanged();
                }
            }
        }
        private global::System.Int32 _PassId;
        partial void OnPassIdChanging(global::System.Int32 value);
        partial void OnPassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private global::System.Int32 _CustomerId;
        partial void OnCustomerIdChanging(global::System.Int32 value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassNumber
        {
            get
            {
                return _PassNumber;
            }
            set
            {
                OnPassNumberChanging(value);
                ReportPropertyChanging("PassNumber");
                _PassNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PassNumber");
                OnPassNumberChanged();
            }
        }
        private global::System.String _PassNumber;
        partial void OnPassNumberChanging(global::System.String value);
        partial void OnPassNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean FreePass
        {
            get
            {
                return _FreePass;
            }
            set
            {
                OnFreePassChanging(value);
                ReportPropertyChanging("FreePass");
                _FreePass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreePass");
                OnFreePassChanged();
            }
        }
        private global::System.Boolean _FreePass = false;
        partial void OnFreePassChanging(global::System.Boolean value);
        partial void OnFreePassChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "CustomerPass", "Customer")]
        public Person Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("RMSEntities.CustomerPass", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("RMSEntities.CustomerPass", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("RMSEntities.CustomerPass", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("RMSEntities.CustomerPass", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "PassTicket", "Ticket")]
        public EntityCollection<Ticket> Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("RMSEntities.PassTicket", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("RMSEntities.PassTicket", "Ticket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : Person
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static Patient CreatePatient(global::System.Int32 id, global::System.String firstName, global::System.String lastName)
        {
            Patient patient = new Patient();
            patient.Id = id;
            patient.FirstName = firstName;
            patient.LastName = lastName;
            return patient;
        }

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "PatientPrescription", "Prescription")]
        public EntityCollection<Prescription> Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prescription>("RMSEntities.PatientPrescription", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prescription>("RMSEntities.PatientPrescription", "Prescription", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Cashier))]
    [KnownTypeAttribute(typeof(Doctor))]
    [KnownTypeAttribute(typeof(Patient))]
    [KnownTypeAttribute(typeof(Customers))]
    public abstract partial class Person : EntityObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Salutation
        {
            get
            {
                return _Salutation;
            }
            set
            {
                OnSalutationChanging(value);
                ReportPropertyChanging("Salutation");
                _Salutation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Salutation");
                OnSalutationChanged();
            }
        }
        private global::System.String _Salutation;
        partial void OnSalutationChanging(global::System.String value);
        partial void OnSalutationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InActive
        {
            get
            {
                return _InActive;
            }
            set
            {
                OnInActiveChanging(value);
                ReportPropertyChanging("InActive");
                _InActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InActive");
                OnInActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _InActive = false;
        partial void OnInActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnInActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "CustomerTransaction", "Transaction")]
        public EntityCollection<TransactionBase> Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionBase>("RMSEntities.CustomerTransaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionBase>("RMSEntities.CustomerTransaction", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "CustomerPass", "Pass")]
        public EntityCollection<Pass> Pass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pass>("RMSEntities.CustomerPass", "Pass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pass>("RMSEntities.CustomerPass", "Pass", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Prescription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prescription : TransactionBase
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Prescription object.
        /// </summary>
        /// <param name="stationId">Initial value of the StationId property.</param>
        /// <param name="batchId">Initial value of the BatchId property.</param>
        /// <param name="transactionNumber">Initial value of the TransactionNumber property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="cashierId">Initial value of the CashierId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="openClose">Initial value of the OpenClose property.</param>
        public static Prescription CreatePrescription(global::System.Int32 stationId, global::System.Int32 batchId, global::System.String transactionNumber, global::System.DateTime time, global::System.Int32 cashierId, global::System.Int32 transactionId, global::System.Boolean openClose)
        {
            Prescription prescription = new Prescription();
            prescription.StationId = stationId;
            prescription.BatchId = batchId;
            prescription.TransactionNumber = transactionNumber;
            prescription.Time = time;
            prescription.CashierId = cashierId;
            prescription.TransactionId = transactionId;
            prescription.OpenClose = openClose;
            return prescription;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DoctorId;
        partial void OnDoctorIdChanging(Nullable<global::System.Int32> value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Repeat
        {
            get
            {
                return _Repeat;
            }
            set
            {
                OnRepeatChanging(value);
                ReportPropertyChanging("Repeat");
                _Repeat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Repeat");
                OnRepeatChanged();
            }
        }
        private global::System.Int32 _Repeat = 0;
        partial void OnRepeatChanging(global::System.Int32 value);
        partial void OnRepeatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PatientId;
        partial void OnPatientIdChanging(Nullable<global::System.Int32> value);
        partial void OnPatientIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "DoctorPrescription", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("RMSEntities.DoctorPrescription", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("RMSEntities.DoctorPrescription", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("RMSEntities.DoctorPrescription", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("RMSEntities.DoctorPrescription", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "PatientPrescription", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RMSEntities.PatientPrescription", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RMSEntities.PatientPrescription", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RMSEntities.PatientPrescription", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("RMSEntities.PatientPrescription", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="PrescriptionEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrescriptionEntry : TransactionEntryBase
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrescriptionEntry object.
        /// </summary>
        /// <param name="storeID">Initial value of the StoreID property.</param>
        /// <param name="transactionEntryId">Initial value of the TransactionEntryId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="salesTaxPercent">Initial value of the SalesTaxPercent property.</param>
        public static PrescriptionEntry CreatePrescriptionEntry(global::System.Int32 storeID, global::System.Int32 transactionEntryId, global::System.Int32 transactionId, global::System.Int32 itemId, global::System.Decimal price, global::System.Decimal salesTaxPercent)
        {
            PrescriptionEntry prescriptionEntry = new PrescriptionEntry();
            prescriptionEntry.StoreID = storeID;
            prescriptionEntry.TransactionEntryId = transactionEntryId;
            prescriptionEntry.TransactionId = transactionId;
            prescriptionEntry.ItemId = itemId;
            prescriptionEntry.Price = price;
            prescriptionEntry.SalesTaxPercent = salesTaxPercent;
            return prescriptionEntry;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dosage
        {
            get
            {
                return _Dosage;
            }
            set
            {
                OnDosageChanging(value);
                ReportPropertyChanging("Dosage");
                _Dosage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dosage");
                OnDosageChanged();
            }
        }
        private global::System.String _Dosage;
        partial void OnDosageChanging(global::System.String value);
        partial void OnDosageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExpiryDate
        {
            get
            {
                return _ExpiryDate;
            }
            set
            {
                OnExpiryDateChanging(value);
                ReportPropertyChanging("ExpiryDate");
                _ExpiryDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExpiryDate");
                OnExpiryDateChanged();
            }
        }
        private global::System.String _ExpiryDate;
        partial void OnExpiryDateChanging(global::System.String value);
        partial void OnExpiryDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="QuickPrescription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuickPrescription : TransactionBase
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuickPrescription object.
        /// </summary>
        /// <param name="stationId">Initial value of the StationId property.</param>
        /// <param name="batchId">Initial value of the BatchId property.</param>
        /// <param name="transactionNumber">Initial value of the TransactionNumber property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="cashierId">Initial value of the CashierId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="openClose">Initial value of the OpenClose property.</param>
        public static QuickPrescription CreateQuickPrescription(global::System.Int32 stationId, global::System.Int32 batchId, global::System.String transactionNumber, global::System.DateTime time, global::System.Int32 cashierId, global::System.Int32 transactionId, global::System.Boolean openClose)
        {
            QuickPrescription quickPrescription = new QuickPrescription();
            quickPrescription.StationId = stationId;
            quickPrescription.BatchId = batchId;
            quickPrescription.TransactionNumber = transactionNumber;
            quickPrescription.Time = time;
            quickPrescription.CashierId = cashierId;
            quickPrescription.TransactionId = transactionId;
            quickPrescription.OpenClose = openClose;
            return quickPrescription;
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Station")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Station : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Station object.
        /// </summary>
        /// <param name="stationId">Initial value of the StationId property.</param>
        /// <param name="stationCode">Initial value of the StationCode property.</param>
        /// <param name="storeId">Initial value of the StoreId property.</param>
        /// <param name="receiptPrinterName">Initial value of the ReceiptPrinterName property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        public static Station CreateStation(global::System.Int32 stationId, global::System.String stationCode, global::System.Int32 storeId, global::System.String receiptPrinterName, global::System.String machineName)
        {
            Station station = new Station();
            station.StationId = stationId;
            station.StationCode = stationCode;
            station.StoreId = storeId;
            station.ReceiptPrinterName = receiptPrinterName;
            station.MachineName = machineName;
            return station;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StationId
        {
            get
            {
                return _StationId;
            }
            set
            {
                if (_StationId != value)
                {
                    OnStationIdChanging(value);
                    ReportPropertyChanging("StationId");
                    _StationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StationId");
                    OnStationIdChanged();
                }
            }
        }
        private global::System.Int32 _StationId;
        partial void OnStationIdChanging(global::System.Int32 value);
        partial void OnStationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StationCode
        {
            get
            {
                return _StationCode;
            }
            set
            {
                OnStationCodeChanging(value);
                ReportPropertyChanging("StationCode");
                _StationCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StationCode");
                OnStationCodeChanged();
            }
        }
        private global::System.String _StationCode;
        partial void OnStationCodeChanging(global::System.String value);
        partial void OnStationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreId
        {
            get
            {
                return _StoreId;
            }
            set
            {
                OnStoreIdChanging(value);
                ReportPropertyChanging("StoreId");
                _StoreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoreId");
                OnStoreIdChanged();
            }
        }
        private global::System.Int32 _StoreId;
        partial void OnStoreIdChanging(global::System.Int32 value);
        partial void OnStoreIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReceiptPrinterName
        {
            get
            {
                return _ReceiptPrinterName;
            }
            set
            {
                OnReceiptPrinterNameChanging(value);
                ReportPropertyChanging("ReceiptPrinterName");
                _ReceiptPrinterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReceiptPrinterName");
                OnReceiptPrinterNameChanged();
            }
        }
        private global::System.String _ReceiptPrinterName;
        partial void OnReceiptPrinterNameChanging(global::System.String value);
        partial void OnReceiptPrinterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "StoreStation", "Store")]
        public Store Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("RMSEntities.StoreStation", "Store").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("RMSEntities.StoreStation", "Store").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Store> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("RMSEntities.StoreStation", "Store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Store>("RMSEntities.StoreStation", "Store", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "StationTransactionBase", "TransactionBase")]
        public EntityCollection<TransactionBase> TransactionBase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionBase>("RMSEntities.StationTransactionBase", "TransactionBase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionBase>("RMSEntities.StationTransactionBase", "TransactionBase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "StationBatch", "Batch")]
        public EntityCollection<Batch> Batch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Batch>("RMSEntities.StationBatch", "Batch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Batch>("RMSEntities.StationBatch", "Batch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="StockItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StockItem : Item
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StockItem object.
        /// </summary>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="itemNotDiscountable">Initial value of the ItemNotDiscountable property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="itemLookupCode">Initial value of the ItemLookupCode property.</param>
        /// <param name="department">Initial value of the Department property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="extendedDescription">Initial value of the ExtendedDescription property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static StockItem CreateStockItem(global::System.String description, global::System.Boolean itemNotDiscountable, global::System.Int32 itemId, global::System.String itemLookupCode, global::System.String department, global::System.String category, global::System.Decimal price, global::System.Decimal cost, global::System.Double quantity, global::System.String extendedDescription, global::System.Boolean inactive, global::System.DateTime dateCreated)
        {
            StockItem stockItem = new StockItem();
            stockItem.Description = description;
            stockItem.ItemNotDiscountable = itemNotDiscountable;
            stockItem.ItemId = itemId;
            stockItem.ItemLookupCode = itemLookupCode;
            stockItem.Department = department;
            stockItem.Category = category;
            stockItem.Price = price;
            stockItem.Cost = cost;
            stockItem.Quantity = quantity;
            stockItem.ExtendedDescription = extendedDescription;
            stockItem.Inactive = inactive;
            stockItem.DateCreated = dateCreated;
            return stockItem;
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Store")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Store : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Store object.
        /// </summary>
        /// <param name="storeId">Initial value of the StoreId property.</param>
        /// <param name="storeCode">Initial value of the StoreCode property.</param>
        /// <param name="storeAddress">Initial value of the StoreAddress property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static Store CreateStore(global::System.Int32 storeId, global::System.String storeCode, global::System.String storeAddress, global::System.Int32 companyId)
        {
            Store store = new Store();
            store.StoreId = storeId;
            store.StoreCode = storeCode;
            store.StoreAddress = storeAddress;
            store.CompanyId = companyId;
            return store;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreId
        {
            get
            {
                return _StoreId;
            }
            set
            {
                if (_StoreId != value)
                {
                    OnStoreIdChanging(value);
                    ReportPropertyChanging("StoreId");
                    _StoreId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoreId");
                    OnStoreIdChanged();
                }
            }
        }
        private global::System.Int32 _StoreId;
        partial void OnStoreIdChanging(global::System.Int32 value);
        partial void OnStoreIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoreCode
        {
            get
            {
                return _StoreCode;
            }
            set
            {
                OnStoreCodeChanging(value);
                ReportPropertyChanging("StoreCode");
                _StoreCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StoreCode");
                OnStoreCodeChanged();
            }
        }
        private global::System.String _StoreCode;
        partial void OnStoreCodeChanging(global::System.String value);
        partial void OnStoreCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoreAddress
        {
            get
            {
                return _StoreAddress;
            }
            set
            {
                OnStoreAddressChanging(value);
                ReportPropertyChanging("StoreAddress");
                _StoreAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StoreAddress");
                OnStoreAddressChanged();
            }
        }
        private global::System.String _StoreAddress;
        partial void OnStoreAddressChanging(global::System.String value);
        partial void OnStoreAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionSeed
        {
            get
            {
                return _TransactionSeed;
            }
            set
            {
                OnTransactionSeedChanging(value);
                ReportPropertyChanging("TransactionSeed");
                _TransactionSeed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionSeed");
                OnTransactionSeedChanged();
            }
        }
        private global::System.Int32 _TransactionSeed = 0;
        partial void OnTransactionSeedChanging(global::System.Int32 value);
        partial void OnTransactionSeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SeedTransaction
        {
            get
            {
                return _SeedTransaction;
            }
            set
            {
                OnSeedTransactionChanging(value);
                ReportPropertyChanging("SeedTransaction");
                _SeedTransaction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeedTransaction");
                OnSeedTransactionChanged();
            }
        }
        private global::System.Int32 _SeedTransaction = 0;
        partial void OnSeedTransactionChanging(global::System.Int32 value);
        partial void OnSeedTransactionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "StoreStation", "Station")]
        public EntityCollection<Station> Station
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Station>("RMSEntities.StoreStation", "Station");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Station>("RMSEntities.StoreStation", "Station", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "CompanyStore", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RMSEntities.CompanyStore", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RMSEntities.CompanyStore", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RMSEntities.CompanyStore", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("RMSEntities.CompanyStore", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="TenderEntryEx")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TenderEntryEx : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TenderEntryEx object.
        /// </summary>
        /// <param name="tenderEntryId">Initial value of the TenderEntryId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        public static TenderEntryEx CreateTenderEntryEx(global::System.Int32 tenderEntryId, global::System.Int32 transactionId)
        {
            TenderEntryEx tenderEntryEx = new TenderEntryEx();
            tenderEntryEx.TenderEntryId = tenderEntryId;
            tenderEntryEx.TransactionId = transactionId;
            return tenderEntryEx;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenderEntryId
        {
            get
            {
                return _TenderEntryId;
            }
            set
            {
                if (_TenderEntryId != value)
                {
                    OnTenderEntryIdChanging(value);
                    ReportPropertyChanging("TenderEntryId");
                    _TenderEntryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TenderEntryId");
                    OnTenderEntryIdChanged();
                }
            }
        }
        private global::System.Int32 _TenderEntryId;
        partial void OnTenderEntryIdChanging(global::System.Int32 value);
        partial void OnTenderEntryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private global::System.Int32 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int32 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CashAmount
        {
            get
            {
                return _CashAmount;
            }
            set
            {
                OnCashAmountChanging(value);
                ReportPropertyChanging("CashAmount");
                _CashAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CashAmount");
                OnCashAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _CashAmount = 0m;
        partial void OnCashAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnCashAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerId;
        partial void OnCustomerIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreditCardNumber
        {
            get
            {
                return _CreditCardNumber;
            }
            set
            {
                OnCreditCardNumberChanging(value);
                ReportPropertyChanging("CreditCardNumber");
                _CreditCardNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreditCardNumber");
                OnCreditCardNumberChanged();
            }
        }
        private global::System.String _CreditCardNumber;
        partial void OnCreditCardNumberChanging(global::System.String value);
        partial void OnCreditCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CreditCardAmount
        {
            get
            {
                return _CreditCardAmount;
            }
            set
            {
                OnCreditCardAmountChanging(value);
                ReportPropertyChanging("CreditCardAmount");
                _CreditCardAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditCardAmount");
                OnCreditCardAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _CreditCardAmount = 0m;
        partial void OnCreditCardAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnCreditCardAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CheckNumber
        {
            get
            {
                return _CheckNumber;
            }
            set
            {
                OnCheckNumberChanging(value);
                ReportPropertyChanging("CheckNumber");
                _CheckNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CheckNumber");
                OnCheckNumberChanged();
            }
        }
        private global::System.String _CheckNumber;
        partial void OnCheckNumberChanging(global::System.String value);
        partial void OnCheckNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CheckAmount
        {
            get
            {
                return _CheckAmount;
            }
            set
            {
                OnCheckAmountChanging(value);
                ReportPropertyChanging("CheckAmount");
                _CheckAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckAmount");
                OnCheckAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _CheckAmount = 0m;
        partial void OnCheckAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnCheckAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AccountAmount
        {
            get
            {
                return _AccountAmount;
            }
            set
            {
                OnAccountAmountChanging(value);
                ReportPropertyChanging("AccountAmount");
                _AccountAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountAmount");
                OnAccountAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _AccountAmount = 0m;
        partial void OnAccountAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAccountAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "TransactionBaseTenderEntryEx", "TransactionBase")]
        public TransactionBase Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionBase>("RMSEntities.TransactionBaseTenderEntryEx", "TransactionBase").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionBase>("RMSEntities.TransactionBaseTenderEntryEx", "TransactionBase").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransactionBase> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionBase>("RMSEntities.TransactionBaseTenderEntryEx", "TransactionBase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransactionBase>("RMSEntities.TransactionBaseTenderEntryEx", "TransactionBase", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Ticket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ticket : TransactionBase
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ticket object.
        /// </summary>
        /// <param name="stationId">Initial value of the StationId property.</param>
        /// <param name="batchId">Initial value of the BatchId property.</param>
        /// <param name="transactionNumber">Initial value of the TransactionNumber property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="cashierId">Initial value of the CashierId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="openClose">Initial value of the OpenClose property.</param>
        public static Ticket CreateTicket(global::System.Int32 stationId, global::System.Int32 batchId, global::System.String transactionNumber, global::System.DateTime time, global::System.Int32 cashierId, global::System.Int32 transactionId, global::System.Boolean openClose)
        {
            Ticket ticket = new Ticket();
            ticket.StationId = stationId;
            ticket.BatchId = batchId;
            ticket.TransactionNumber = transactionNumber;
            ticket.Time = time;
            ticket.CashierId = cashierId;
            ticket.TransactionId = transactionId;
            ticket.OpenClose = openClose;
            return ticket;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PassId
        {
            get
            {
                return _PassId;
            }
            set
            {
                OnPassIdChanging(value);
                ReportPropertyChanging("PassId");
                _PassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PassId");
                OnPassIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PassId;
        partial void OnPassIdChanging(Nullable<global::System.Int32> value);
        partial void OnPassIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "PassTicket", "Pass")]
        public Pass Pass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pass>("RMSEntities.PassTicket", "Pass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pass>("RMSEntities.PassTicket", "Pass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pass> PassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pass>("RMSEntities.PassTicket", "Pass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pass>("RMSEntities.PassTicket", "Pass", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="TicketEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TicketEntry : TransactionEntryBase
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TicketEntry object.
        /// </summary>
        /// <param name="storeID">Initial value of the StoreID property.</param>
        /// <param name="transactionEntryId">Initial value of the TransactionEntryId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="salesTaxPercent">Initial value of the SalesTaxPercent property.</param>
        /// <param name="startDateTime">Initial value of the StartDateTime property.</param>
        public static TicketEntry CreateTicketEntry(global::System.Int32 storeID, global::System.Int32 transactionEntryId, global::System.Int32 transactionId, global::System.Int32 itemId, global::System.Decimal price, global::System.Decimal salesTaxPercent, global::System.DateTime startDateTime)
        {
            TicketEntry ticketEntry = new TicketEntry();
            ticketEntry.StoreID = storeID;
            ticketEntry.TransactionEntryId = transactionEntryId;
            ticketEntry.TransactionId = transactionId;
            ticketEntry.ItemId = itemId;
            ticketEntry.Price = price;
            ticketEntry.SalesTaxPercent = salesTaxPercent;
            ticketEntry.StartDateTime = startDateTime;
            return ticketEntry;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleNumber
        {
            get
            {
                return _VehicleNumber;
            }
            set
            {
                OnVehicleNumberChanging(value);
                ReportPropertyChanging("VehicleNumber");
                _VehicleNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleNumber");
                OnVehicleNumberChanged();
            }
        }
        private global::System.String _VehicleNumber;
        partial void OnVehicleNumberChanging(global::System.String value);
        partial void OnVehicleNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDateTime
        {
            get
            {
                return _EndDateTime;
            }
            set
            {
                OnEndDateTimeChanging(value);
                ReportPropertyChanging("EndDateTime");
                _EndDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDateTime");
                OnEndDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDateTime;
        partial void OnEndDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateTimeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="TicketItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TicketItem : Item
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TicketItem object.
        /// </summary>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="itemNotDiscountable">Initial value of the ItemNotDiscountable property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="itemLookupCode">Initial value of the ItemLookupCode property.</param>
        /// <param name="department">Initial value of the Department property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="extendedDescription">Initial value of the ExtendedDescription property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="price1">Initial value of the Price1 property.</param>
        /// <param name="price2">Initial value of the Price2 property.</param>
        public static TicketItem CreateTicketItem(global::System.String description, global::System.Boolean itemNotDiscountable, global::System.Int32 itemId, global::System.String itemLookupCode, global::System.String department, global::System.String category, global::System.Decimal price, global::System.Decimal cost, global::System.Double quantity, global::System.String extendedDescription, global::System.Boolean inactive, global::System.DateTime dateCreated, global::System.Decimal price1, global::System.Decimal price2)
        {
            TicketItem ticketItem = new TicketItem();
            ticketItem.Description = description;
            ticketItem.ItemNotDiscountable = itemNotDiscountable;
            ticketItem.ItemId = itemId;
            ticketItem.ItemLookupCode = itemLookupCode;
            ticketItem.Department = department;
            ticketItem.Category = category;
            ticketItem.Price = price;
            ticketItem.Cost = cost;
            ticketItem.Quantity = quantity;
            ticketItem.ExtendedDescription = extendedDescription;
            ticketItem.Inactive = inactive;
            ticketItem.DateCreated = dateCreated;
            ticketItem.Price1 = price1;
            ticketItem.Price2 = price2;
            return ticketItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price1
        {
            get
            {
                return _Price1;
            }
            set
            {
                OnPrice1Changing(value);
                ReportPropertyChanging("Price1");
                _Price1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price1");
                OnPrice1Changed();
            }
        }
        private global::System.Decimal _Price1;
        partial void OnPrice1Changing(global::System.Decimal value);
        partial void OnPrice1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price2
        {
            get
            {
                return _Price2;
            }
            set
            {
                OnPrice2Changing(value);
                ReportPropertyChanging("Price2");
                _Price2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price2");
                OnPrice2Changed();
            }
        }
        private global::System.Decimal _Price2;
        partial void OnPrice2Changing(global::System.Decimal value);
        partial void OnPrice2Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "TicketSetupTicketItem", "TicketSetup")]
        public TicketSetup TicketSetup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketSetup>("RMSEntities.TicketSetupTicketItem", "TicketSetup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketSetup>("RMSEntities.TicketSetupTicketItem", "TicketSetup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TicketSetup> TicketSetupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketSetup>("RMSEntities.TicketSetupTicketItem", "TicketSetup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TicketSetup>("RMSEntities.TicketSetupTicketItem", "TicketSetup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="TicketSetup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TicketSetup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TicketSetup object.
        /// </summary>
        /// <param name="freeMinutes">Initial value of the FreeMinutes property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        public static TicketSetup CreateTicketSetup(global::System.Int32 freeMinutes, global::System.Int32 itemId)
        {
            TicketSetup ticketSetup = new TicketSetup();
            ticketSetup.FreeMinutes = freeMinutes;
            ticketSetup.ItemId = itemId;
            return ticketSetup;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FreeMinutes
        {
            get
            {
                return _FreeMinutes;
            }
            set
            {
                OnFreeMinutesChanging(value);
                ReportPropertyChanging("FreeMinutes");
                _FreeMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreeMinutes");
                OnFreeMinutesChanged();
            }
        }
        private global::System.Int32 _FreeMinutes;
        partial void OnFreeMinutesChanging(global::System.Int32 value);
        partial void OnFreeMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "TicketSetupTicketItem", "TicketItem")]
        public TicketItem TicketItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketItem>("RMSEntities.TicketSetupTicketItem", "TicketItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketItem>("RMSEntities.TicketSetupTicketItem", "TicketItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TicketItem> TicketItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketItem>("RMSEntities.TicketSetupTicketItem", "TicketItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TicketItem>("RMSEntities.TicketSetupTicketItem", "TicketItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : TransactionBase
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transaction object.
        /// </summary>
        /// <param name="stationId">Initial value of the StationId property.</param>
        /// <param name="batchId">Initial value of the BatchId property.</param>
        /// <param name="transactionNumber">Initial value of the TransactionNumber property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="cashierId">Initial value of the CashierId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="openClose">Initial value of the OpenClose property.</param>
        public static Transaction CreateTransaction(global::System.Int32 stationId, global::System.Int32 batchId, global::System.String transactionNumber, global::System.DateTime time, global::System.Int32 cashierId, global::System.Int32 transactionId, global::System.Boolean openClose)
        {
            Transaction transaction = new Transaction();
            transaction.StationId = stationId;
            transaction.BatchId = batchId;
            transaction.TransactionNumber = transactionNumber;
            transaction.Time = time;
            transaction.CashierId = cashierId;
            transaction.TransactionId = transactionId;
            transaction.OpenClose = openClose;
            return transaction;
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="TransactionBase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Ticket))]
    [KnownTypeAttribute(typeof(Prescription))]
    [KnownTypeAttribute(typeof(Transaction))]
    [KnownTypeAttribute(typeof(QuickPrescription))]
    public abstract partial class TransactionBase : EntityObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StationId
        {
            get
            {
                return _StationId;
            }
            set
            {
                OnStationIdChanging(value);
                ReportPropertyChanging("StationId");
                _StationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StationId");
                OnStationIdChanged();
            }
        }
        private global::System.Int32 _StationId;
        partial void OnStationIdChanging(global::System.Int32 value);
        partial void OnStationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchId
        {
            get
            {
                return _BatchId;
            }
            set
            {
                OnBatchIdChanging(value);
                ReportPropertyChanging("BatchId");
                _BatchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchId");
                OnBatchIdChanged();
            }
        }
        private global::System.Int32 _BatchId;
        partial void OnBatchIdChanging(global::System.Int32 value);
        partial void OnBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CloseBatchId
        {
            get
            {
                return _CloseBatchId;
            }
            set
            {
                OnCloseBatchIdChanging(value);
                ReportPropertyChanging("CloseBatchId");
                _CloseBatchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseBatchId");
                OnCloseBatchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CloseBatchId;
        partial void OnCloseBatchIdChanging(Nullable<global::System.Int32> value);
        partial void OnCloseBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionNumber
        {
            get
            {
                return _TransactionNumber;
            }
            set
            {
                OnTransactionNumberChanging(value);
                ReportPropertyChanging("TransactionNumber");
                _TransactionNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransactionNumber");
                OnTransactionNumberChanged();
            }
        }
        private global::System.String _TransactionNumber;
        partial void OnTransactionNumberChanging(global::System.String value);
        partial void OnTransactionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerId;
        partial void OnCustomerIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CashierId
        {
            get
            {
                return _CashierId;
            }
            set
            {
                OnCashierIdChanging(value);
                ReportPropertyChanging("CashierId");
                _CashierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CashierId");
                OnCashierIdChanged();
            }
        }
        private global::System.Int32 _CashierId;
        partial void OnCashierIdChanging(global::System.Int32 value);
        partial void OnCashierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReferenceNumber
        {
            get
            {
                return _ReferenceNumber;
            }
            set
            {
                OnReferenceNumberChanging(value);
                ReportPropertyChanging("ReferenceNumber");
                _ReferenceNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReferenceNumber");
                OnReferenceNumberChanged();
            }
        }
        private global::System.String _ReferenceNumber;
        partial void OnReferenceNumberChanging(global::System.String value);
        partial void OnReferenceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreCode
        {
            get
            {
                return _StoreCode;
            }
            set
            {
                OnStoreCodeChanging(value);
                ReportPropertyChanging("StoreCode");
                _StoreCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreCode");
                OnStoreCodeChanged();
            }
        }
        private global::System.String _StoreCode;
        partial void OnStoreCodeChanging(global::System.String value);
        partial void OnStoreCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int32 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int32 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OpenClose
        {
            get
            {
                return _OpenClose;
            }
            set
            {
                OnOpenCloseChanging(value);
                ReportPropertyChanging("OpenClose");
                _OpenClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpenClose");
                OnOpenCloseChanged();
            }
        }
        private global::System.Boolean _OpenClose;
        partial void OnOpenCloseChanging(global::System.Boolean value);
        partial void OnOpenCloseChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "TransactionTransactionEntry", "TransactionEntry")]
        public EntityCollection<TransactionEntryBase> TransactionEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionEntryBase>("RMSEntities.TransactionTransactionEntry", "TransactionEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionEntryBase>("RMSEntities.TransactionTransactionEntry", "TransactionEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "CustomerTransaction", "Customer")]
        public Person Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("RMSEntities.CustomerTransaction", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("RMSEntities.CustomerTransaction", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("RMSEntities.CustomerTransaction", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("RMSEntities.CustomerTransaction", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "CashierTransactionBase", "Cashier")]
        public Cashier Cashier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cashier>("RMSEntities.CashierTransactionBase", "Cashier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cashier>("RMSEntities.CashierTransactionBase", "Cashier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cashier> CashierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cashier>("RMSEntities.CashierTransactionBase", "Cashier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cashier>("RMSEntities.CashierTransactionBase", "Cashier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "BatchTransactionBase", "Batch")]
        public Batch Batch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("RMSEntities.BatchTransactionBase", "Batch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("RMSEntities.BatchTransactionBase", "Batch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Batch> BatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("RMSEntities.BatchTransactionBase", "Batch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Batch>("RMSEntities.BatchTransactionBase", "Batch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "StationTransactionBase", "Station")]
        public Station Station
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Station>("RMSEntities.StationTransactionBase", "Station").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Station>("RMSEntities.StationTransactionBase", "Station").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Station> StationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Station>("RMSEntities.StationTransactionBase", "Station");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Station>("RMSEntities.StationTransactionBase", "Station", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "TransactionBaseTenderEntryEx", "TenderEntryEx")]
        public EntityCollection<TenderEntryEx> TenderEntryEx
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenderEntryEx>("RMSEntities.TransactionBaseTenderEntryEx", "TenderEntryEx");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenderEntryEx>("RMSEntities.TransactionBaseTenderEntryEx", "TenderEntryEx", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "BatchTransactionBase1", "Batch")]
        public Batch CloseBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("RMSEntities.BatchTransactionBase1", "Batch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("RMSEntities.BatchTransactionBase1", "Batch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Batch> CloseBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("RMSEntities.BatchTransactionBase1", "Batch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Batch>("RMSEntities.BatchTransactionBase1", "Batch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="TransactionEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionEntry : TransactionEntryBase
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionEntry object.
        /// </summary>
        /// <param name="storeID">Initial value of the StoreID property.</param>
        /// <param name="transactionEntryId">Initial value of the TransactionEntryId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="salesTaxPercent">Initial value of the SalesTaxPercent property.</param>
        public static TransactionEntry CreateTransactionEntry(global::System.Int32 storeID, global::System.Int32 transactionEntryId, global::System.Int32 transactionId, global::System.Int32 itemId, global::System.Decimal price, global::System.Decimal salesTaxPercent)
        {
            TransactionEntry transactionEntry = new TransactionEntry();
            transactionEntry.StoreID = storeID;
            transactionEntry.TransactionEntryId = transactionEntryId;
            transactionEntry.TransactionId = transactionId;
            transactionEntry.ItemId = itemId;
            transactionEntry.Price = price;
            transactionEntry.SalesTaxPercent = salesTaxPercent;
            return transactionEntry;
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RMSEntities", Name="TransactionEntryBase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(TicketEntry))]
    [KnownTypeAttribute(typeof(TransactionEntry))]
    [KnownTypeAttribute(typeof(PrescriptionEntry))]
    public abstract partial class TransactionEntryBase : EntityObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreID
        {
            get
            {
                return _StoreID;
            }
            set
            {
                OnStoreIDChanging(value);
                ReportPropertyChanging("StoreID");
                _StoreID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoreID");
                OnStoreIDChanged();
            }
        }
        private global::System.Int32 _StoreID;
        partial void OnStoreIDChanging(global::System.Int32 value);
        partial void OnStoreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionEntryId
        {
            get
            {
                return _TransactionEntryId;
            }
            set
            {
                if (_TransactionEntryId != value)
                {
                    OnTransactionEntryIdChanging(value);
                    ReportPropertyChanging("TransactionEntryId");
                    _TransactionEntryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionEntryId");
                    OnTransactionEntryIdChanged();
                }
            }
        }
        private global::System.Int32 _TransactionEntryId;
        partial void OnTransactionEntryIdChanging(global::System.Int32 value);
        partial void OnTransactionEntryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private global::System.Int32 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int32 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity = 1m;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Taxable
        {
            get
            {
                return _Taxable;
            }
            set
            {
                OnTaxableChanging(value);
                ReportPropertyChanging("Taxable");
                _Taxable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Taxable");
                OnTaxableChanged();
            }
        }
        private global::System.Boolean _Taxable = true;
        partial void OnTaxableChanging(global::System.Boolean value);
        partial void OnTaxableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionTime
        {
            get
            {
                return _TransactionTime;
            }
            set
            {
                OnTransactionTimeChanging(value);
                ReportPropertyChanging("TransactionTime");
                _TransactionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionTime");
                OnTransactionTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionTime;
        partial void OnTransactionTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SalesTaxPercent
        {
            get
            {
                return _SalesTaxPercent;
            }
            set
            {
                OnSalesTaxPercentChanging(value);
                ReportPropertyChanging("SalesTaxPercent");
                _SalesTaxPercent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesTaxPercent");
                OnSalesTaxPercentChanged();
            }
        }
        private global::System.Decimal _SalesTaxPercent;
        partial void OnSalesTaxPercentChanging(global::System.Decimal value);
        partial void OnSalesTaxPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Discount = 0m;
        partial void OnDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "TransactionTransactionEntry", "Transaction")]
        public TransactionBase Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionBase>("RMSEntities.TransactionTransactionEntry", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionBase>("RMSEntities.TransactionTransactionEntry", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransactionBase> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionBase>("RMSEntities.TransactionTransactionEntry", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransactionBase>("RMSEntities.TransactionTransactionEntry", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RMSEntities", "ItemTransactionEntryBase", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("RMSEntities.ItemTransactionEntryBase", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("RMSEntities.ItemTransactionEntryBase", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("RMSEntities.ItemTransactionEntryBase", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("RMSEntities.ItemTransactionEntryBase", "Item", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
